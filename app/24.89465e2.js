(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{376:function(e,t,r){"use strict";r.r(t);var a=r(83),n=(r(78),r(69)),o=r(91);function s(e,t,r,a,n,o,s){try{var l=e[o](s),i=l.value}catch(e){return void r(e)}l.done?t(i):Promise.resolve(i).then(a,n)}function l(e){return function(){var t=this,r=arguments;return new Promise(function(a,n){var o=e.apply(t,r);function l(e){s(o,a,n,l,i,"next",e)}function i(e){s(o,a,n,l,i,"throw",e)}l(void 0)})}}var i={name:"ReportsManagement",components:{VueGoodTable:a.a},mixins:[n.a,o.a],props:{baseUrl:{type:String,default:blessing.base_url}},data(){return{reports:[],columns:[{field:"id",type:"number",hidden:!0},{field:"tid",label:this.$t("report.tid"),type:"number"},{field:"uploader",label:this.$t("skinlib.show.uploader")},{field:"reporter",label:this.$t("report.reporter")},{field:"reason",label:this.$t("report.reason"),sortable:!1,width:"23%"},{field:"status",label:this.$t("report.status-title")},{field:"report_at",label:this.$t("report.time"),globalSearchDisabled:!0},{field:"ops",label:this.$t("admin.operationsTitle"),globalSearchDisabled:!0}]}},mounted(){this.fetchData()},methods:{fetchData(){var e=this;return l(function*(){const t=yield e.$http.get("/admin/report-data",e.serverParams),r=t.data,a=t.totalRecords;e.totalRecords=a,e.reports=r})()},deleteTexture(e){this.resolve(e,"delete")},ban(e){this.resolve(e,"ban")},reject(e){this.resolve(e,"reject")},resolve(e,t){var r=this;return l(function*(){const a=yield r.$http.post("/admin/reports",{id:e.id,action:t}),n=a.errno,o=a.msg,s=a.status;0===n?(r.$message.success(o),e.status=s):r.$message.warning(o)})()}}},c=r(58),d=Object(c.a)(i,function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("section",{staticClass:"content"},[r("vue-good-table",{attrs:{mode:"remote",rows:e.reports,"total-rows":e.totalRecords||e.reports.length,columns:e.columns,"search-options":e.tableOptions.search,"pagination-options":e.tableOptions.pagination,"style-class":"vgt-table striped"},on:{"on-page-change":e.onPageChange,"on-sort-change":e.onSortChange,"on-search":e.onSearch,"on-per-page-change":e.onPerPageChange},scopedSlots:e._u([{key:"table-row",fn:function(t){return["tid"===t.column.field?r("span",[e._v("\n        "+e._s(t.formattedRow[t.column.field])+"\n        "),r("a",{attrs:{href:e.baseUrl+"/skinlib/show/"+t.row.tid}},[e._v(e._s(e.$t("report.check")))]),e._v(" "),r("a",{attrs:{href:"#"},on:{click:function(r){return e.deleteTexture(t.row)}}},[e._v("\n          "+e._s(e.$t("report.delete"))+"\n        ")])]):"uploader"===t.column.field?r("span",[e._v("\n        "+e._s(t.row.uploaderName)+" (UID: "+e._s(t.row.uploader)+")\n        "),r("a",{attrs:{href:"#"},on:{click:function(r){return e.ban(t.row)}}},[e._v("\n          "+e._s(e.$t("report.ban"))+"\n        ")])]):"reporter"===t.column.field?r("span",[e._v("\n        "+e._s(t.row.reporterName)+" (UID: "+e._s(t.row.reporter)+")\n      ")]):"status"===t.column.field?r("span",[e._v("\n        "+e._s(e.$t("report.status."+t.row.status))+"\n      ")]):"ops"===t.column.field?r("span",[r("el-button",{attrs:{size:"medium"},on:{click:function(r){return e.reject(t.row)}}},[e._v("\n          "+e._s(e.$t("report.reject"))+"\n        ")])],1):r("span",[e._v("\n        "+e._s(t.formattedRow[t.column.field])+"\n      ")])]}}])})],1)},[],!1,null,null,null);t.default=d.exports},69:function(e,t,r){"use strict";var a=r(0);t.a=a.default.extend({data(){return{tableOptions:{search:{enabled:!0,placeholder:this.$t("vendor.datatable.search")},pagination:{enabled:!0,nextLabel:this.$t("vendor.datatable.next"),prevLabel:this.$t("vendor.datatable.prev"),rowsPerPageLabel:this.$t("vendor.datatable.rowsPerPage"),allLabel:this.$t("vendor.datatable.all"),ofLabel:this.$t("vendor.datatable.of")}}}}})},91:function(e,t,r){"use strict";var a=r(0);function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=[],a=!0,n=!1,o=void 0;try{for(var s,l=e[Symbol.iterator]();!(a=(s=l.next()).done)&&(r.push(s.value),!t||r.length!==t);a=!0);}catch(e){n=!0,o=e}finally{try{a||null==l.return||l.return()}finally{if(n)throw o}}return r}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}t.a=a.default.extend({data:()=>({columns:[{field:"id"}],totalRecords:0,serverParams:{sortField:"id",sortType:"asc",page:1,perPage:10,search:""}}),created(){this.serverParams.sortField=this.columns[0].field},methods:{fetchData:()=>Promise.resolve(),onPageChange(e){this.serverParams.page=e.currentPage,this.fetchData()},onPerPageChange(e){this.serverParams.perPage=e.currentPerPage,this.fetchData()},onSortChange(e){let t=n(e,1)[0];this.serverParams.sortType=t.type,this.serverParams.sortField=t.field,this.fetchData()},onSearch(e){this.serverParams.search=e.searchTerm,this.fetchData()}}})}}]);